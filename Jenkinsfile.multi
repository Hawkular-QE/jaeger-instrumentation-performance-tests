pipeline {
    agent any

    stages {
        stage ('Kick off jobs') {
            steps {
                script {
                    def clientCount = '200'
                    def iterations = '10000'
                    def examples = ['wildfly-swarm', 'spring-boot', 'vertx']
                    
                    /* First do all examples with no-tracing to get a baseline */
                    for (String example : examples) {
                        echo "Running with ${example} with notracing"
                        goBuild(example, 'NONE', '0.1', clientCount, iterations)
                    }

                    /* Now do each of the examples with each of the rates listed */
                    def rates = ['0.05', '0.1', 0.2]
                    for (String rate : rates ) {
                        for (String example : examples) {
                            echo "Example ${example} with JAEGER using rate ${rate}"
                            goBuild(example, 'JAEGER', rate, clientCount, iterations)
                        }
                    }
                }
            }
        }
    }
}

def goBuild(example, tracer, rate, clients, iterations) {
     def p = [string(name: 'TRACER_TYPE', value: tracer), 
        string(name: 'TARGET_APP', value: example), 
        string(name: 'JAEGER_AGENT_HOST', value: 'localhost'), 
        string(name: 'JAEGER_SAMPLING_RATE', value: rate), 
        string(name: 'JMETER_CLIENT_COUNT', value: clients), 
        string(name: 'ITERATIONS', value: iterations), 
        string(name: 'EXAMPLE_PODS', value: '1'), 
        string(name: 'RAMPUP', value: '0'), 
        booleanParam(name: 'DELETE_JAEGER_AT_END', value: true), 
        booleanParam(name: 'DELETE_EXAMPLE_AT_END', value: true)]
            
    build job: 'Jaeger Performance', parameters: p
}



